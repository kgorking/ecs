name: GCC 11/12/13

#on:
#  workflow_run:
#    workflows: [Generate single-include header]
#    types: 
#      - completed

jobs:
  gcc:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: [11, 12, 13]
        built_type: [Debug, Release]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true # recursive

    - name: Install Ninja
      run: /usr/bin/ninja --version || sudo apt-get install ninja-build

    - name: Install compiler
      if: ${{ matrix.version >= 13 }}
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get install gcc-${{ matrix.version }} g++-${{ matrix.version }}

    - name: Configure
      shell: cmake -P {0}
      run: |
        set(ENV{CC} "/usr/bin/gcc-${{ matrix.version }}")
        set(ENV{CXX} "/usr/bin/g++-${{ matrix.version }}")

        execute_process(
          COMMAND cmake
            -S .
            -B build
            -G Ninja
            -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}
            -D CMAKE_MAKE_PROGRAM=/usr/bin/ninja
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()


    - name: Build
      shell: cmake -P {0}
      run: |
        set(ENV{NINJA_STATUS} "[%f/%t %e sec] ")

        execute_process(
          COMMAND cmake --build build
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "CMake build failed")
        endif()


    - name: Run tests
      shell: cmake -P {0}
      run: |
        include(ProcessorCount)
        ProcessorCount(N)

        execute_process(
          COMMAND ctest --output-on-failure -j ${N}
          WORKING_DIRECTORY build
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Running tests failed!")
        endif()
